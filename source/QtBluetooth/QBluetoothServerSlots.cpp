/*

  Qt5xHb - Bindings libraries for Harbour/xHarbour and Qt Framework 5

  Copyright (C) 2018 Marcos Antonio Gambeta <marcosgambeta AT outlook DOT com>

*/

/*
  DO NOT EDIT THIS FILE - the content was created using a source code generator
*/

#include "QBluetoothServerSlots.h"

static SlotsQBluetoothServer * s = NULL;

SlotsQBluetoothServer::SlotsQBluetoothServer(QObject *parent) : QObject(parent)
{
}

SlotsQBluetoothServer::~SlotsQBluetoothServer()
{
}
#if (QT_VERSION >= QT_VERSION_CHECK(5,2,0))
void SlotsQBluetoothServer::newConnection()
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "newConnection()" );
  if( cb )
  {
    PHB_ITEM psender = hb_itemPutPtr( NULL, (QObject *) object );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 1, psender );
    hb_itemRelease( psender );
  }
}
#endif
#if (QT_VERSION >= QT_VERSION_CHECK(5,2,0))
void SlotsQBluetoothServer::error( QBluetoothServer::Error error )
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "error(QBluetoothServer::Error)" );
  if( cb )
  {
    PHB_ITEM psender = hb_itemPutPtr( NULL, (QObject *) object );
    PHB_ITEM perror = hb_itemPutNI( NULL, (int) error );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 2, psender, perror );
    hb_itemRelease( psender );
    hb_itemRelease( perror );
  }
}
#endif

HB_FUNC( QBLUETOOTHSERVER_ONNEWCONNECTION )
{
#if (QT_VERSION >= QT_VERSION_CHECK(5,2,0))
  if( s == NULL )
  {
    s = new SlotsQBluetoothServer( QCoreApplication::instance() );
  }

  hb_retl( Signals_connection_disconnection( s, "newConnection()", "newConnection()" ) );
#else
  hb_retl( false );
#endif
}

HB_FUNC( QBLUETOOTHSERVER_ONERROR )
{
#if (QT_VERSION >= QT_VERSION_CHECK(5,2,0))
  if( s == NULL )
  {
    s = new SlotsQBluetoothServer( QCoreApplication::instance() );
  }

  hb_retl( Signals_connection_disconnection( s, "error(QBluetoothServer::Error)", "error(QBluetoothServer::Error)" ) );
#else
  hb_retl( false );
#endif
}

