/*

  Qt5xHb - Bindings libraries for Harbour/xHarbour and Qt Framework 5

  Copyright (C) 2018 Marcos Antonio Gambeta <marcosgambeta AT outlook DOT com>

*/

/*
  DO NOT EDIT THIS FILE - the content was created using a source code generator
*/

#include "QBar3DSeriesSlots.h"

static SlotsQBar3DSeries * s = NULL;

SlotsQBar3DSeries::SlotsQBar3DSeries(QObject *parent) : QObject(parent)
{
}

SlotsQBar3DSeries::~SlotsQBar3DSeries()
{
}
void SlotsQBar3DSeries::dataProxyChanged( QBarDataProxy * proxy )
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "dataProxyChanged(QBarDataProxy*)" );
  if( cb )
  {
    PHB_ITEM psender = hb_itemPutPtr( NULL, (QObject *) object );
    PHB_ITEM pproxy = hb_itemPutPtr( NULL, (QBarDataProxy *) proxy );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 2, psender, pproxy );
    hb_itemRelease( psender );
    hb_itemRelease( pproxy );
  }
}
void SlotsQBar3DSeries::meshAngleChanged( float angle )
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "meshAngleChanged(float)" );
  if( cb )
  {
    PHB_ITEM psender = hb_itemPutPtr( NULL, (QObject *) object );
    PHB_ITEM pangle = hb_itemPutND( NULL, angle );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 2, psender, pangle );
    hb_itemRelease( psender );
    hb_itemRelease( pangle );
  }
}
void SlotsQBar3DSeries::selectedBarChanged( const QPoint & position )
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "selectedBarChanged(QPoint)" );
  if( cb )
  {
    PHB_ITEM psender = hb_itemPutPtr( NULL, (QObject *) object );
    PHB_ITEM pposition = hb_itemPutPtr( NULL, (QPoint *) &position );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 2, psender, pposition );
    hb_itemRelease( psender );
    hb_itemRelease( pposition );
  }
}

HB_FUNC( QBAR3DSERIES_ONDATAPROXYCHANGED )
{
  if( s == NULL )
  {
    s = new SlotsQBar3DSeries( QCoreApplication::instance() );
  }

  hb_retl( Signals_connection_disconnection( s, "dataProxyChanged(QBarDataProxy*)", "dataProxyChanged(QBarDataProxy*)" ) );
}

HB_FUNC( QBAR3DSERIES_ONMESHANGLECHANGED )
{
  if( s == NULL )
  {
    s = new SlotsQBar3DSeries( QCoreApplication::instance() );
  }

  hb_retl( Signals_connection_disconnection( s, "meshAngleChanged(float)", "meshAngleChanged(float)" ) );
}

HB_FUNC( QBAR3DSERIES_ONSELECTEDBARCHANGED )
{
  if( s == NULL )
  {
    s = new SlotsQBar3DSeries( QCoreApplication::instance() );
  }

  hb_retl( Signals_connection_disconnection( s, "selectedBarChanged(QPoint)", "selectedBarChanged(QPoint)" ) );
}

