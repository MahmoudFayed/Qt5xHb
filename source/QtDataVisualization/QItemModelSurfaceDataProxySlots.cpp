/*

  Qt5xHb - Bindings libraries for Harbour/xHarbour and Qt Framework 5

  Copyright (C) 2018 Marcos Antonio Gambeta <marcosgambeta AT outlook DOT com>

*/

/*
  DO NOT EDIT THIS FILE - the content was created using a source code generator
*/

#include "QItemModelSurfaceDataProxySlots.h"

static QItemModelSurfaceDataProxySlots * s = NULL;

QItemModelSurfaceDataProxySlots::QItemModelSurfaceDataProxySlots(QObject *parent) : QObject(parent)
{
}

QItemModelSurfaceDataProxySlots::~QItemModelSurfaceDataProxySlots()
{
}
void QItemModelSurfaceDataProxySlots::autoColumnCategoriesChanged( bool enable )
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "autoColumnCategoriesChanged(bool)" );
  if( cb )
  {
    PHB_ITEM psender = hb_itemPutPtr( NULL, (QObject *) object );
    PHB_ITEM penable = hb_itemPutL( NULL, enable );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 2, psender, penable );
    hb_itemRelease( psender );
    hb_itemRelease( penable );
  }
}
void QItemModelSurfaceDataProxySlots::autoRowCategoriesChanged( bool enable )
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "autoRowCategoriesChanged(bool)" );
  if( cb )
  {
    PHB_ITEM psender = hb_itemPutPtr( NULL, (QObject *) object );
    PHB_ITEM penable = hb_itemPutL( NULL, enable );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 2, psender, penable );
    hb_itemRelease( psender );
    hb_itemRelease( penable );
  }
}
void QItemModelSurfaceDataProxySlots::columnCategoriesChanged()
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "columnCategoriesChanged()" );
  if( cb )
  {
    PHB_ITEM psender = hb_itemPutPtr( NULL, (QObject *) object );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 1, psender );
    hb_itemRelease( psender );
  }
}
void QItemModelSurfaceDataProxySlots::columnRoleChanged( const QString & role )
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "columnRoleChanged(QString)" );
  if( cb )
  {
    PHB_ITEM psender = hb_itemPutPtr( NULL, (QObject *) object );
    PHB_ITEM prole = hb_itemPutC( NULL, QSTRINGTOSTRING(role) );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 2, psender, prole );
    hb_itemRelease( psender );
    hb_itemRelease( prole );
  }
}
void QItemModelSurfaceDataProxySlots::columnRolePatternChanged( const QRegExp & pattern )
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "columnRolePatternChanged(QRegExp)" );
  if( cb )
  {
    PHB_ITEM psender = hb_itemPutPtr( NULL, (QObject *) object );
    PHB_ITEM ppattern = hb_itemPutPtr( NULL, (QRegExp *) &pattern );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 2, psender, ppattern );
    hb_itemRelease( psender );
    hb_itemRelease( ppattern );
  }
}
void QItemModelSurfaceDataProxySlots::columnRoleReplaceChanged( const QString & replace )
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "columnRoleReplaceChanged(QString)" );
  if( cb )
  {
    PHB_ITEM psender = hb_itemPutPtr( NULL, (QObject *) object );
    PHB_ITEM preplace = hb_itemPutC( NULL, QSTRINGTOSTRING(replace) );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 2, psender, preplace );
    hb_itemRelease( psender );
    hb_itemRelease( preplace );
  }
}
void QItemModelSurfaceDataProxySlots::itemModelChanged( const QAbstractItemModel * itemModel )
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "itemModelChanged(QAbstractItemModel)" );
  if( cb )
  {
    PHB_ITEM psender = hb_itemPutPtr( NULL, (QObject *) object );
    PHB_ITEM pitemModel = hb_itemPutPtr( NULL, (QAbstractItemModel *) itemModel );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 2, psender, pitemModel );
    hb_itemRelease( psender );
    hb_itemRelease( pitemModel );
  }
}
void QItemModelSurfaceDataProxySlots::multiMatchBehaviorChanged( QItemModelSurfaceDataProxy::MultiMatchBehavior behavior )
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "multiMatchBehaviorChanged(QItemModelSurfaceDataProxy::MultiMatchBehavior)" );
  if( cb )
  {
    PHB_ITEM psender = hb_itemPutPtr( NULL, (QObject *) object );
    PHB_ITEM pbehavior = hb_itemPutNI( NULL, (int) behavior );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 2, psender, pbehavior );
    hb_itemRelease( psender );
    hb_itemRelease( pbehavior );
  }
}
void QItemModelSurfaceDataProxySlots::rowCategoriesChanged()
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "rowCategoriesChanged()" );
  if( cb )
  {
    PHB_ITEM psender = hb_itemPutPtr( NULL, (QObject *) object );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 1, psender );
    hb_itemRelease( psender );
  }
}
void QItemModelSurfaceDataProxySlots::rowRoleChanged( const QString & role )
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "rowRoleChanged(QString)" );
  if( cb )
  {
    PHB_ITEM psender = hb_itemPutPtr( NULL, (QObject *) object );
    PHB_ITEM prole = hb_itemPutC( NULL, QSTRINGTOSTRING(role) );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 2, psender, prole );
    hb_itemRelease( psender );
    hb_itemRelease( prole );
  }
}
void QItemModelSurfaceDataProxySlots::rowRolePatternChanged( const QRegExp & pattern )
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "rowRolePatternChanged(QRegExp)" );
  if( cb )
  {
    PHB_ITEM psender = hb_itemPutPtr( NULL, (QObject *) object );
    PHB_ITEM ppattern = hb_itemPutPtr( NULL, (QRegExp *) &pattern );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 2, psender, ppattern );
    hb_itemRelease( psender );
    hb_itemRelease( ppattern );
  }
}
void QItemModelSurfaceDataProxySlots::rowRoleReplaceChanged( const QString & replace )
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "rowRoleReplaceChanged(QString)" );
  if( cb )
  {
    PHB_ITEM psender = hb_itemPutPtr( NULL, (QObject *) object );
    PHB_ITEM preplace = hb_itemPutC( NULL, QSTRINGTOSTRING(replace) );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 2, psender, preplace );
    hb_itemRelease( psender );
    hb_itemRelease( preplace );
  }
}
void QItemModelSurfaceDataProxySlots::useModelCategoriesChanged( bool enable )
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "useModelCategoriesChanged(bool)" );
  if( cb )
  {
    PHB_ITEM psender = hb_itemPutPtr( NULL, (QObject *) object );
    PHB_ITEM penable = hb_itemPutL( NULL, enable );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 2, psender, penable );
    hb_itemRelease( psender );
    hb_itemRelease( penable );
  }
}
void QItemModelSurfaceDataProxySlots::xPosRoleChanged( const QString & role )
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "xPosRoleChanged(QString)" );
  if( cb )
  {
    PHB_ITEM psender = hb_itemPutPtr( NULL, (QObject *) object );
    PHB_ITEM prole = hb_itemPutC( NULL, QSTRINGTOSTRING(role) );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 2, psender, prole );
    hb_itemRelease( psender );
    hb_itemRelease( prole );
  }
}
void QItemModelSurfaceDataProxySlots::xPosRolePatternChanged( const QRegExp & pattern )
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "xPosRolePatternChanged(QRegExp)" );
  if( cb )
  {
    PHB_ITEM psender = hb_itemPutPtr( NULL, (QObject *) object );
    PHB_ITEM ppattern = hb_itemPutPtr( NULL, (QRegExp *) &pattern );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 2, psender, ppattern );
    hb_itemRelease( psender );
    hb_itemRelease( ppattern );
  }
}
void QItemModelSurfaceDataProxySlots::xPosRoleReplaceChanged( const QString & replace )
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "xPosRoleReplaceChanged(QString)" );
  if( cb )
  {
    PHB_ITEM psender = hb_itemPutPtr( NULL, (QObject *) object );
    PHB_ITEM preplace = hb_itemPutC( NULL, QSTRINGTOSTRING(replace) );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 2, psender, preplace );
    hb_itemRelease( psender );
    hb_itemRelease( preplace );
  }
}
void QItemModelSurfaceDataProxySlots::yPosRoleChanged( const QString & role )
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "yPosRoleChanged(QString)" );
  if( cb )
  {
    PHB_ITEM psender = hb_itemPutPtr( NULL, (QObject *) object );
    PHB_ITEM prole = hb_itemPutC( NULL, QSTRINGTOSTRING(role) );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 2, psender, prole );
    hb_itemRelease( psender );
    hb_itemRelease( prole );
  }
}
void QItemModelSurfaceDataProxySlots::yPosRolePatternChanged( const QRegExp & pattern )
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "yPosRolePatternChanged(QRegExp)" );
  if( cb )
  {
    PHB_ITEM psender = hb_itemPutPtr( NULL, (QObject *) object );
    PHB_ITEM ppattern = hb_itemPutPtr( NULL, (QRegExp *) &pattern );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 2, psender, ppattern );
    hb_itemRelease( psender );
    hb_itemRelease( ppattern );
  }
}
void QItemModelSurfaceDataProxySlots::yPosRoleReplaceChanged( const QString & replace )
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "yPosRoleReplaceChanged(QString)" );
  if( cb )
  {
    PHB_ITEM psender = hb_itemPutPtr( NULL, (QObject *) object );
    PHB_ITEM preplace = hb_itemPutC( NULL, QSTRINGTOSTRING(replace) );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 2, psender, preplace );
    hb_itemRelease( psender );
    hb_itemRelease( preplace );
  }
}
void QItemModelSurfaceDataProxySlots::zPosRoleChanged( const QString & role )
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "zPosRoleChanged(QString)" );
  if( cb )
  {
    PHB_ITEM psender = hb_itemPutPtr( NULL, (QObject *) object );
    PHB_ITEM prole = hb_itemPutC( NULL, QSTRINGTOSTRING(role) );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 2, psender, prole );
    hb_itemRelease( psender );
    hb_itemRelease( prole );
  }
}
void QItemModelSurfaceDataProxySlots::zPosRolePatternChanged( const QRegExp & pattern )
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "zPosRolePatternChanged(QRegExp)" );
  if( cb )
  {
    PHB_ITEM psender = hb_itemPutPtr( NULL, (QObject *) object );
    PHB_ITEM ppattern = hb_itemPutPtr( NULL, (QRegExp *) &pattern );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 2, psender, ppattern );
    hb_itemRelease( psender );
    hb_itemRelease( ppattern );
  }
}
void QItemModelSurfaceDataProxySlots::zPosRoleReplaceChanged( const QString & replace )
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "zPosRoleReplaceChanged(QString)" );
  if( cb )
  {
    PHB_ITEM psender = hb_itemPutPtr( NULL, (QObject *) object );
    PHB_ITEM preplace = hb_itemPutC( NULL, QSTRINGTOSTRING(replace) );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 2, psender, preplace );
    hb_itemRelease( psender );
    hb_itemRelease( preplace );
  }
}

HB_FUNC( QITEMMODELSURFACEDATAPROXY_ONAUTOCOLUMNCATEGORIESCHANGED )
{
  if( s == NULL )
  {
    s = new QItemModelSurfaceDataProxySlots( QCoreApplication::instance() );
  }

  hb_retl( Signals_connection_disconnection( s, "autoColumnCategoriesChanged(bool)", "autoColumnCategoriesChanged(bool)" ) );
}

HB_FUNC( QITEMMODELSURFACEDATAPROXY_ONAUTOROWCATEGORIESCHANGED )
{
  if( s == NULL )
  {
    s = new QItemModelSurfaceDataProxySlots( QCoreApplication::instance() );
  }

  hb_retl( Signals_connection_disconnection( s, "autoRowCategoriesChanged(bool)", "autoRowCategoriesChanged(bool)" ) );
}

HB_FUNC( QITEMMODELSURFACEDATAPROXY_ONCOLUMNCATEGORIESCHANGED )
{
  if( s == NULL )
  {
    s = new QItemModelSurfaceDataProxySlots( QCoreApplication::instance() );
  }

  hb_retl( Signals_connection_disconnection( s, "columnCategoriesChanged()", "columnCategoriesChanged()" ) );
}

HB_FUNC( QITEMMODELSURFACEDATAPROXY_ONCOLUMNROLECHANGED )
{
  if( s == NULL )
  {
    s = new QItemModelSurfaceDataProxySlots( QCoreApplication::instance() );
  }

  hb_retl( Signals_connection_disconnection( s, "columnRoleChanged(QString)", "columnRoleChanged(QString)" ) );
}

HB_FUNC( QITEMMODELSURFACEDATAPROXY_ONCOLUMNROLEPATTERNCHANGED )
{
  if( s == NULL )
  {
    s = new QItemModelSurfaceDataProxySlots( QCoreApplication::instance() );
  }

  hb_retl( Signals_connection_disconnection( s, "columnRolePatternChanged(QRegExp)", "columnRolePatternChanged(QRegExp)" ) );
}

HB_FUNC( QITEMMODELSURFACEDATAPROXY_ONCOLUMNROLEREPLACECHANGED )
{
  if( s == NULL )
  {
    s = new QItemModelSurfaceDataProxySlots( QCoreApplication::instance() );
  }

  hb_retl( Signals_connection_disconnection( s, "columnRoleReplaceChanged(QString)", "columnRoleReplaceChanged(QString)" ) );
}

HB_FUNC( QITEMMODELSURFACEDATAPROXY_ONITEMMODELCHANGED )
{
  if( s == NULL )
  {
    s = new QItemModelSurfaceDataProxySlots( QCoreApplication::instance() );
  }

  hb_retl( Signals_connection_disconnection( s, "itemModelChanged(QAbstractItemModel*)", "itemModelChanged(QAbstractItemModel*)" ) );
}

HB_FUNC( QITEMMODELSURFACEDATAPROXY_ONMULTIMATCHBEHAVIORCHANGED )
{
  if( s == NULL )
  {
    s = new QItemModelSurfaceDataProxySlots( QCoreApplication::instance() );
  }

  hb_retl( Signals_connection_disconnection( s, "multiMatchBehaviorChanged(QItemModelSurfaceDataProxy::MultiMatchBehavior)", "multiMatchBehaviorChanged(QItemModelSurfaceDataProxy::MultiMatchBehavior)" ) );
}

HB_FUNC( QITEMMODELSURFACEDATAPROXY_ONROWCATEGORIESCHANGED )
{
  if( s == NULL )
  {
    s = new QItemModelSurfaceDataProxySlots( QCoreApplication::instance() );
  }

  hb_retl( Signals_connection_disconnection( s, "rowCategoriesChanged()", "rowCategoriesChanged()" ) );
}

HB_FUNC( QITEMMODELSURFACEDATAPROXY_ONROWROLECHANGED )
{
  if( s == NULL )
  {
    s = new QItemModelSurfaceDataProxySlots( QCoreApplication::instance() );
  }

  hb_retl( Signals_connection_disconnection( s, "rowRoleChanged(QString)", "rowRoleChanged(QString)" ) );
}

HB_FUNC( QITEMMODELSURFACEDATAPROXY_ONROWROLEPATTERNCHANGED )
{
  if( s == NULL )
  {
    s = new QItemModelSurfaceDataProxySlots( QCoreApplication::instance() );
  }

  hb_retl( Signals_connection_disconnection( s, "rowRolePatternChanged(QRegExp)", "rowRolePatternChanged(QRegExp)" ) );
}

HB_FUNC( QITEMMODELSURFACEDATAPROXY_ONROWROLEREPLACECHANGED )
{
  if( s == NULL )
  {
    s = new QItemModelSurfaceDataProxySlots( QCoreApplication::instance() );
  }

  hb_retl( Signals_connection_disconnection( s, "rowRoleReplaceChanged(QString)", "rowRoleReplaceChanged(QString)" ) );
}

HB_FUNC( QITEMMODELSURFACEDATAPROXY_ONUSEMODELCATEGORIESCHANGED )
{
  if( s == NULL )
  {
    s = new QItemModelSurfaceDataProxySlots( QCoreApplication::instance() );
  }

  hb_retl( Signals_connection_disconnection( s, "useModelCategoriesChanged(bool)", "useModelCategoriesChanged(bool)" ) );
}

HB_FUNC( QITEMMODELSURFACEDATAPROXY_ONXPOSROLECHANGED )
{
  if( s == NULL )
  {
    s = new QItemModelSurfaceDataProxySlots( QCoreApplication::instance() );
  }

  hb_retl( Signals_connection_disconnection( s, "xPosRoleChanged(QString)", "xPosRoleChanged(QString)" ) );
}

HB_FUNC( QITEMMODELSURFACEDATAPROXY_ONXPOSROLEPATTERNCHANGED )
{
  if( s == NULL )
  {
    s = new QItemModelSurfaceDataProxySlots( QCoreApplication::instance() );
  }

  hb_retl( Signals_connection_disconnection( s, "xPosRolePatternChanged(QRegExp)", "xPosRolePatternChanged(QRegExp)" ) );
}

HB_FUNC( QITEMMODELSURFACEDATAPROXY_ONXPOSROLEREPLACECHANGED )
{
  if( s == NULL )
  {
    s = new QItemModelSurfaceDataProxySlots( QCoreApplication::instance() );
  }

  hb_retl( Signals_connection_disconnection( s, "xPosRoleReplaceChanged(QString)", "xPosRoleReplaceChanged(QString)" ) );
}

HB_FUNC( QITEMMODELSURFACEDATAPROXY_ONYPOSROLECHANGED )
{
  if( s == NULL )
  {
    s = new QItemModelSurfaceDataProxySlots( QCoreApplication::instance() );
  }

  hb_retl( Signals_connection_disconnection( s, "yPosRoleChanged(QString)", "yPosRoleChanged(QString)" ) );
}

HB_FUNC( QITEMMODELSURFACEDATAPROXY_ONYPOSROLEPATTERNCHANGED )
{
  if( s == NULL )
  {
    s = new QItemModelSurfaceDataProxySlots( QCoreApplication::instance() );
  }

  hb_retl( Signals_connection_disconnection( s, "yPosRolePatternChanged(QRegExp)", "yPosRolePatternChanged(QRegExp)" ) );
}

HB_FUNC( QITEMMODELSURFACEDATAPROXY_ONYPOSROLEREPLACECHANGED )
{
  if( s == NULL )
  {
    s = new QItemModelSurfaceDataProxySlots( QCoreApplication::instance() );
  }

  hb_retl( Signals_connection_disconnection( s, "yPosRoleReplaceChanged(QString)", "yPosRoleReplaceChanged(QString)" ) );
}

HB_FUNC( QITEMMODELSURFACEDATAPROXY_ONZPOSROLECHANGED )
{
  if( s == NULL )
  {
    s = new QItemModelSurfaceDataProxySlots( QCoreApplication::instance() );
  }

  hb_retl( Signals_connection_disconnection( s, "zPosRoleChanged(QString)", "zPosRoleChanged(QString)" ) );
}

HB_FUNC( QITEMMODELSURFACEDATAPROXY_ONZPOSROLEPATTERNCHANGED )
{
  if( s == NULL )
  {
    s = new QItemModelSurfaceDataProxySlots( QCoreApplication::instance() );
  }

  hb_retl( Signals_connection_disconnection( s, "zPosRolePatternChanged(QRegExp)", "zPosRolePatternChanged(QRegExp)" ) );
}

HB_FUNC( QITEMMODELSURFACEDATAPROXY_ONZPOSROLEREPLACECHANGED )
{
  if( s == NULL )
  {
    s = new QItemModelSurfaceDataProxySlots( QCoreApplication::instance() );
  }

  hb_retl( Signals_connection_disconnection( s, "zPosRoleReplaceChanged(QString)", "zPosRoleReplaceChanged(QString)" ) );
}

