/*

  Qt5xHb - Bindings libraries for Harbour/xHarbour and Qt Framework 5

  Copyright (C) 2018 Marcos Antonio Gambeta <marcosgambeta AT outlook DOT com>

*/

/*
  DO NOT EDIT THIS FILE - the content was created using a source code generator
*/

#include "QAbstractSeriesSlots.h"

static SlotsQAbstractSeries * s = NULL;

SlotsQAbstractSeries::SlotsQAbstractSeries(QObject *parent) : QObject(parent)
{
}

SlotsQAbstractSeries::~SlotsQAbstractSeries()
{
}
void SlotsQAbstractSeries::nameChanged()
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "nameChanged()" );
  if( cb )
  {
    PHB_ITEM psender = hb_itemPutPtr( NULL, (QObject *) object );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 1, psender );
    hb_itemRelease( psender );
  }
}
void SlotsQAbstractSeries::opacityChanged()
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "opacityChanged()" );
  if( cb )
  {
    PHB_ITEM psender = hb_itemPutPtr( NULL, (QObject *) object );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 1, psender );
    hb_itemRelease( psender );
  }
}
void SlotsQAbstractSeries::useOpenGLChanged()
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "useOpenGLChanged()" );
  if( cb )
  {
    PHB_ITEM psender = hb_itemPutPtr( NULL, (QObject *) object );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 1, psender );
    hb_itemRelease( psender );
  }
}
void SlotsQAbstractSeries::visibleChanged()
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "visibleChanged()" );
  if( cb )
  {
    PHB_ITEM psender = hb_itemPutPtr( NULL, (QObject *) object );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 1, psender );
    hb_itemRelease( psender );
  }
}

HB_FUNC( QABSTRACTSERIES_ONNAMECHANGED )
{
  if( s == NULL )
  {
    s = new SlotsQAbstractSeries( QCoreApplication::instance() );
  }

  hb_retl( Signals_connection_disconnection( s, "nameChanged()", "nameChanged()" ) );
}

HB_FUNC( QABSTRACTSERIES_ONOPACITYCHANGED )
{
  if( s == NULL )
  {
    s = new SlotsQAbstractSeries( QCoreApplication::instance() );
  }

  hb_retl( Signals_connection_disconnection( s, "opacityChanged()", "opacityChanged()" ) );
}

HB_FUNC( QABSTRACTSERIES_ONUSEOPENGLCHANGED )
{
  if( s == NULL )
  {
    s = new SlotsQAbstractSeries( QCoreApplication::instance() );
  }

  hb_retl( Signals_connection_disconnection( s, "useOpenGLChanged()", "useOpenGLChanged()" ) );
}

HB_FUNC( QABSTRACTSERIES_ONVISIBLECHANGED )
{
  if( s == NULL )
  {
    s = new SlotsQAbstractSeries( QCoreApplication::instance() );
  }

  hb_retl( Signals_connection_disconnection( s, "visibleChanged()", "visibleChanged()" ) );
}

