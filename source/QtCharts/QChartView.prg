/*

  Qt5xHb - Bindings libraries for Harbour/xHarbour and Qt Framework 5

  Copyright (C) 2018 Marcos Antonio Gambeta <marcosgambeta AT outlook DOT com>

*/

/*
  DO NOT EDIT THIS FILE - the content was created using a source code generator
*/

#include "hbclass.ch"

CLASS QChartView INHERIT QGraphicsView

   METHOD new
   METHOD delete

   METHOD chart
   METHOD rubberBand
   METHOD setChart

   DESTRUCTOR destroyObject

END CLASS

PROCEDURE destroyObject () CLASS QChartView
   IF ::self_destruction
      ::delete()
   ENDIF
RETURN

#pragma BEGINDUMP

#include <Qt>

#ifndef __XHARBOUR__
#include <QChartView>
#endif

#include "qt5xhb_common.h"
#include "qt5xhb_macros.h"
#include "qt5xhb_utils.h"

#ifdef __XHARBOUR__
#include <QChartView>
#endif

/*
explicit QChartView(QWidget *parent = Q_NULLPTR)
*/
void QChartView_new1 ()
{
  QChartView * o = new QChartView ( OPQWIDGET(1,Q_NULLPTR) );
  _qt5xhb_returnNewObject( o, false );
}

/*
explicit QChartView(QChart *chart, QWidget *parent = Q_NULLPTR)
*/
void QChartView_new2 ()
{
  QChartView * o = new QChartView ( PQCHART(1), OPQWIDGET(2,Q_NULLPTR) );
  _qt5xhb_returnNewObject( o, false );
}

//[1]explicit QChartView(QWidget *parent = Q_NULLPTR)
//[2]explicit QChartView(QChart *chart, QWidget *parent = Q_NULLPTR)

HB_FUNC_STATIC( QCHARTVIEW_NEW )
{
  if( ISBETWEEN(0,1) && (ISQWIDGET(1)||ISNIL(1)) )
  {
    QChartView_new1();
  }
  else if( ISBETWEEN(1,2) && ISQCHART(1) && (ISQWIDGET(2)||ISNIL(2)) )
  {
    QChartView_new2();
  }
  else
  {
    hb_errRT_BASE( EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
  }
}

/*
~QChartView()
*/
HB_FUNC_STATIC( QCHARTVIEW_DELETE )
{
  QChartView * obj = (QChartView *) _qt5xhb_itemGetPtrStackSelfItem();

  if( obj )
  {
    delete obj;
    obj = NULL;
    PHB_ITEM self = hb_stackSelfItem();
    PHB_ITEM ptr = hb_itemPutPtr( NULL, NULL );
    hb_objSendMsg( self, "_pointer", 1, ptr );
    hb_itemRelease( ptr );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void setRubberBand(const RubberBands &rubberBands)
*/

/*
RubberBands rubberBand() const
*/
HB_FUNC_STATIC( QCHARTVIEW_RUBBERBAND )
{
  QChartView * obj = (QChartView *) _qt5xhb_itemGetPtrStackSelfItem();

  if( obj )
  {
    if( ISNUMPAR(0) )
    {
      RENUM( obj->rubberBand () );
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
  }
}

/*
QChart *chart() const
*/
HB_FUNC_STATIC( QCHARTVIEW_CHART )
{
  QChartView * obj = (QChartView *) _qt5xhb_itemGetPtrStackSelfItem();

  if( obj )
  {
    if( ISNUMPAR(0) )
    {
      QChart * ptr = obj->chart ();
      _qt5xhb_createReturnQObjectClass ( ptr, "QCHART" );
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
  }
}

/*
void setChart(QChart *chart)
*/
HB_FUNC_STATIC( QCHARTVIEW_SETCHART )
{
  QChartView * obj = (QChartView *) _qt5xhb_itemGetPtrStackSelfItem();

  if( obj )
  {
    if( ISNUMPAR(1) && ISQCHART(1) )
    {
      obj->setChart ( PQCHART(1) );
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void resizeEvent(QResizeEvent *event) (protected)
*/

/*
void mousePressEvent(QMouseEvent *event) (protected)
*/

/*
void mouseMoveEvent(QMouseEvent *event) (protected)
*/

/*
void mouseReleaseEvent(QMouseEvent *event) (protected)
*/

#pragma ENDDUMP
