/*

  Qt5xHb - Bindings libraries for Harbour/xHarbour and Qt Framework 5

  Copyright (C) 2018 Marcos Antonio Gambeta <marcosgambeta AT outlook DOT com>

*/

/*
  DO NOT EDIT THIS FILE - the content was created using a source code generator
*/

#include "QVBoxPlotModelMapperSlots.h"

static SlotsQVBoxPlotModelMapper * s = NULL;

SlotsQVBoxPlotModelMapper::SlotsQVBoxPlotModelMapper(QObject *parent) : QObject(parent)
{
}

SlotsQVBoxPlotModelMapper::~SlotsQVBoxPlotModelMapper()
{
}
void SlotsQVBoxPlotModelMapper::firstBoxSetColumnChanged()
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "firstBoxSetColumnChanged()" );
  if( cb )
  {
    PHB_ITEM psender = hb_itemPutPtr( NULL, (QObject *) object );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 1, psender );
    hb_itemRelease( psender );
  }
}
void SlotsQVBoxPlotModelMapper::firstRowChanged()
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "firstRowChanged()" );
  if( cb )
  {
    PHB_ITEM psender = hb_itemPutPtr( NULL, (QObject *) object );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 1, psender );
    hb_itemRelease( psender );
  }
}
void SlotsQVBoxPlotModelMapper::lastBoxSetColumnChanged()
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "lastBoxSetColumnChanged()" );
  if( cb )
  {
    PHB_ITEM psender = hb_itemPutPtr( NULL, (QObject *) object );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 1, psender );
    hb_itemRelease( psender );
  }
}
void SlotsQVBoxPlotModelMapper::modelReplaced()
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "modelReplaced()" );
  if( cb )
  {
    PHB_ITEM psender = hb_itemPutPtr( NULL, (QObject *) object );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 1, psender );
    hb_itemRelease( psender );
  }
}
void SlotsQVBoxPlotModelMapper::rowCountChanged()
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "rowCountChanged()" );
  if( cb )
  {
    PHB_ITEM psender = hb_itemPutPtr( NULL, (QObject *) object );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 1, psender );
    hb_itemRelease( psender );
  }
}
void SlotsQVBoxPlotModelMapper::seriesReplaced()
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "seriesReplaced()" );
  if( cb )
  {
    PHB_ITEM psender = hb_itemPutPtr( NULL, (QObject *) object );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 1, psender );
    hb_itemRelease( psender );
  }
}

HB_FUNC( QVBOXPLOTMODELMAPPER_ONFIRSTBOXSETCOLUMNCHANGED )
{
  if( s == NULL )
  {
    s = new SlotsQVBoxPlotModelMapper( QCoreApplication::instance() );
  }

  hb_retl( Signals_connection_disconnection( s, "firstBoxSetColumnChanged()", "firstBoxSetColumnChanged()" ) );
}

HB_FUNC( QVBOXPLOTMODELMAPPER_ONFIRSTROWCHANGED )
{
  if( s == NULL )
  {
    s = new SlotsQVBoxPlotModelMapper( QCoreApplication::instance() );
  }

  hb_retl( Signals_connection_disconnection( s, "firstRowChanged()", "firstRowChanged()" ) );
}

HB_FUNC( QVBOXPLOTMODELMAPPER_ONLASTBOXSETCOLUMNCHANGED )
{
  if( s == NULL )
  {
    s = new SlotsQVBoxPlotModelMapper( QCoreApplication::instance() );
  }

  hb_retl( Signals_connection_disconnection( s, "lastBoxSetColumnChanged()", "lastBoxSetColumnChanged()" ) );
}

HB_FUNC( QVBOXPLOTMODELMAPPER_ONMODELREPLACED )
{
  if( s == NULL )
  {
    s = new SlotsQVBoxPlotModelMapper( QCoreApplication::instance() );
  }

  hb_retl( Signals_connection_disconnection( s, "modelReplaced()", "modelReplaced()" ) );
}

HB_FUNC( QVBOXPLOTMODELMAPPER_ONROWCOUNTCHANGED )
{
  if( s == NULL )
  {
    s = new SlotsQVBoxPlotModelMapper( QCoreApplication::instance() );
  }

  hb_retl( Signals_connection_disconnection( s, "rowCountChanged()", "rowCountChanged()" ) );
}

HB_FUNC( QVBOXPLOTMODELMAPPER_ONSERIESREPLACED )
{
  if( s == NULL )
  {
    s = new SlotsQVBoxPlotModelMapper( QCoreApplication::instance() );
  }

  hb_retl( Signals_connection_disconnection( s, "seriesReplaced()", "seriesReplaced()" ) );
}

