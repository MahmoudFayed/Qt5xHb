/*

  Qt5xHb - Bindings libraries for Harbour/xHarbour and Qt Framework 5

  Copyright (C) 2018 Marcos Antonio Gambeta <marcosgambeta AT outlook DOT com>

*/

/*
  DO NOT EDIT THIS FILE - the content was created using a source code generator
*/

#include "hbclass.ch"

CLASS QCandlestickModelMapper INHERIT QObject

   METHOD new

   METHOD model
   METHOD orientation
   METHOD series
   METHOD setModel
   METHOD setSeries

   METHOD onModelReplaced
   METHOD onSeriesReplaced

   DESTRUCTOR destroyObject

END CLASS

PROCEDURE destroyObject () CLASS QCandlestickModelMapper
   IF ::self_destruction
      ::delete()
   ENDIF
RETURN

#pragma BEGINDUMP

#include <Qt>

#ifndef __XHARBOUR__
#include <QCandlestickModelMapper>
#endif

#include "qt5xhb_common.h"
#include "qt5xhb_macros.h"
#include "qt5xhb_utils.h"

#ifdef __XHARBOUR__
#include <QCandlestickModelMapper>
#endif

/*
explicit QCandlestickModelMapper(QObject *parent = nullptr)
*/
HB_FUNC_STATIC( QCANDLESTICKMODELMAPPER_NEW )
{
  if( ISBETWEEN(0,1) && (ISQOBJECT(1)||ISNIL(1)) )
  {
    QCandlestickModelMapper * o = new QCandlestickModelMapper ( OPQOBJECT(1,nullptr) );
    _qt5xhb_returnNewObject( o, false );
  }
  else
  {
    hb_errRT_BASE( EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
  }
}

/*
QAbstractItemModel *model() const
*/
HB_FUNC_STATIC( QCANDLESTICKMODELMAPPER_MODEL )
{
  QCandlestickModelMapper * obj = (QCandlestickModelMapper *) _qt5xhb_itemGetPtrStackSelfItem();

  if( obj )
  {
    if( ISNUMPAR(0) )
    {
      QAbstractItemModel * ptr = obj->model ();
      _qt5xhb_createReturnQObjectClass ( ptr, "QABSTRACTITEMMODEL" );
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
  }
}

/*
void setModel(QAbstractItemModel *model)
*/
HB_FUNC_STATIC( QCANDLESTICKMODELMAPPER_SETMODEL )
{
  QCandlestickModelMapper * obj = (QCandlestickModelMapper *) _qt5xhb_itemGetPtrStackSelfItem();

  if( obj )
  {
    if( ISNUMPAR(1) && ISQABSTRACTITEMMODEL(1) )
    {
      obj->setModel ( PQABSTRACTITEMMODEL(1) );
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
QCandlestickSeries *series() const
*/
HB_FUNC_STATIC( QCANDLESTICKMODELMAPPER_SERIES )
{
  QCandlestickModelMapper * obj = (QCandlestickModelMapper *) _qt5xhb_itemGetPtrStackSelfItem();

  if( obj )
  {
    if( ISNUMPAR(0) )
    {
      QCandlestickSeries * ptr = obj->series ();
      _qt5xhb_createReturnQObjectClass ( ptr, "QCANDLESTICKSERIES" );
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
  }
}

/*
void setSeries(QCandlestickSeries *series)
*/
HB_FUNC_STATIC( QCANDLESTICKMODELMAPPER_SETSERIES )
{
  QCandlestickModelMapper * obj = (QCandlestickModelMapper *) _qt5xhb_itemGetPtrStackSelfItem();

  if( obj )
  {
    if( ISNUMPAR(1) && ISQCANDLESTICKSERIES(1) )
    {
      obj->setSeries ( PQCANDLESTICKSERIES(1) );
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
virtual Qt::Orientation orientation() const = 0
*/
HB_FUNC_STATIC( QCANDLESTICKMODELMAPPER_ORIENTATION )
{
  QCandlestickModelMapper * obj = (QCandlestickModelMapper *) _qt5xhb_itemGetPtrStackSelfItem();

  if( obj )
  {
    if( ISNUMPAR(0) )
    {
      RENUM( obj->orientation () );
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
  }
}

/*
void setTimestamp(int timestamp) (protected)
*/

/*
int timestamp() const (protected)
*/

/*
void setOpen(int open) (protected)
*/

/*
int open() const (protected)
*/

/*
void setHigh(int high) (protected)
*/

/*
int high() const (protected)
*/

/*
void setLow(int low) (protected)
*/

/*
int low() const (protected)
*/

/*
void setClose(int close) (protected)
*/

/*
int close() const (protected)
*/

/*
void setFirstSetSection(int firstSetSection) (protected)
*/

/*
int firstSetSection() const (protected)
*/

/*
void setLastSetSection(int lastSetSection) (protected)
*/

/*
int lastSetSection() const (protected)
*/

#pragma ENDDUMP
