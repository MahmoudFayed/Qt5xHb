/*

  Qt5xHb - Bindings libraries for Harbour/xHarbour and Qt Framework 5

  Copyright (C) 2018 Marcos Antonio Gambeta <marcosgambeta AT outlook DOT com>

*/

/*
  DO NOT EDIT THIS FILE - the content was created using a source code generator
*/

#include "QHCandlestickModelMapperSlots.h"

static SlotsQHCandlestickModelMapper * s = NULL;

SlotsQHCandlestickModelMapper::SlotsQHCandlestickModelMapper(QObject *parent) : QObject(parent)
{
}

SlotsQHCandlestickModelMapper::~SlotsQHCandlestickModelMapper()
{
}
void SlotsQHCandlestickModelMapper::closeColumnChanged()
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "closeColumnChanged()" );
  if( cb )
  {
    PHB_ITEM psender = hb_itemPutPtr( NULL, (QObject *) object );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 1, psender );
    hb_itemRelease( psender );
  }
}
void SlotsQHCandlestickModelMapper::firstSetRowChanged()
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "firstSetRowChanged()" );
  if( cb )
  {
    PHB_ITEM psender = hb_itemPutPtr( NULL, (QObject *) object );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 1, psender );
    hb_itemRelease( psender );
  }
}
void SlotsQHCandlestickModelMapper::highColumnChanged()
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "highColumnChanged()" );
  if( cb )
  {
    PHB_ITEM psender = hb_itemPutPtr( NULL, (QObject *) object );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 1, psender );
    hb_itemRelease( psender );
  }
}
void SlotsQHCandlestickModelMapper::lastSetRowChanged()
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "lastSetRowChanged()" );
  if( cb )
  {
    PHB_ITEM psender = hb_itemPutPtr( NULL, (QObject *) object );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 1, psender );
    hb_itemRelease( psender );
  }
}
void SlotsQHCandlestickModelMapper::lowColumnChanged()
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "lowColumnChanged()" );
  if( cb )
  {
    PHB_ITEM psender = hb_itemPutPtr( NULL, (QObject *) object );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 1, psender );
    hb_itemRelease( psender );
  }
}
void SlotsQHCandlestickModelMapper::openColumnChanged()
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "openColumnChanged()" );
  if( cb )
  {
    PHB_ITEM psender = hb_itemPutPtr( NULL, (QObject *) object );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 1, psender );
    hb_itemRelease( psender );
  }
}
void SlotsQHCandlestickModelMapper::timestampColumnChanged()
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "timestampColumnChanged()" );
  if( cb )
  {
    PHB_ITEM psender = hb_itemPutPtr( NULL, (QObject *) object );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 1, psender );
    hb_itemRelease( psender );
  }
}

HB_FUNC( QHCANDLESTICKMODELMAPPER_ONCLOSECOLUMNCHANGED )
{
  if( s == NULL )
  {
    s = new SlotsQHCandlestickModelMapper( QCoreApplication::instance() );
  }

  hb_retl( Signals_connection_disconnection( s, "closeColumnChanged()", "closeColumnChanged()" ) );
}

HB_FUNC( QHCANDLESTICKMODELMAPPER_ONFIRSTSETROWCHANGED )
{
  if( s == NULL )
  {
    s = new SlotsQHCandlestickModelMapper( QCoreApplication::instance() );
  }

  hb_retl( Signals_connection_disconnection( s, "firstSetRowChanged()", "firstSetRowChanged()" ) );
}

HB_FUNC( QHCANDLESTICKMODELMAPPER_ONHIGHCOLUMNCHANGED )
{
  if( s == NULL )
  {
    s = new SlotsQHCandlestickModelMapper( QCoreApplication::instance() );
  }

  hb_retl( Signals_connection_disconnection( s, "highColumnChanged()", "highColumnChanged()" ) );
}

HB_FUNC( QHCANDLESTICKMODELMAPPER_ONLASTSETROWCHANGED )
{
  if( s == NULL )
  {
    s = new SlotsQHCandlestickModelMapper( QCoreApplication::instance() );
  }

  hb_retl( Signals_connection_disconnection( s, "lastSetRowChanged()", "lastSetRowChanged()" ) );
}

HB_FUNC( QHCANDLESTICKMODELMAPPER_ONLOWCOLUMNCHANGED )
{
  if( s == NULL )
  {
    s = new SlotsQHCandlestickModelMapper( QCoreApplication::instance() );
  }

  hb_retl( Signals_connection_disconnection( s, "lowColumnChanged()", "lowColumnChanged()" ) );
}

HB_FUNC( QHCANDLESTICKMODELMAPPER_ONOPENCOLUMNCHANGED )
{
  if( s == NULL )
  {
    s = new SlotsQHCandlestickModelMapper( QCoreApplication::instance() );
  }

  hb_retl( Signals_connection_disconnection( s, "openColumnChanged()", "openColumnChanged()" ) );
}

HB_FUNC( QHCANDLESTICKMODELMAPPER_ONTIMESTAMPCOLUMNCHANGED )
{
  if( s == NULL )
  {
    s = new SlotsQHCandlestickModelMapper( QCoreApplication::instance() );
  }

  hb_retl( Signals_connection_disconnection( s, "timestampColumnChanged()", "timestampColumnChanged()" ) );
}

