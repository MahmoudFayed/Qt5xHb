/*

  Qt5xHb - Bindings libraries for Harbour/xHarbour and Qt Framework 5

  Copyright (C) 2018 Marcos Antonio Gambeta <marcosgambeta AT outlook DOT com>

*/

/*
  DO NOT EDIT THIS FILE - the content was created using a source code generator
*/

#include "QKeySequenceEditSlots.h"

static QKeySequenceEditSlots * s = NULL;

QKeySequenceEditSlots::QKeySequenceEditSlots(QObject *parent) : QObject(parent)
{
}

QKeySequenceEditSlots::~QKeySequenceEditSlots()
{
}
#if (QT_VERSION >= QT_VERSION_CHECK(5,2,0))
void QKeySequenceEditSlots::editingFinished()
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "editingFinished()" );
  if( cb )
  {
    PHB_ITEM psender = Signals_return_qobject ( (QObject *) object, "QKEYSEQUENCEEDIT" );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 1, psender );
    hb_itemRelease( psender );
  }
}
#endif
#if (QT_VERSION >= QT_VERSION_CHECK(5,2,0))
void QKeySequenceEditSlots::keySequenceChanged( const QKeySequence & keySequence )
{
  QObject *object = qobject_cast<QObject *>(sender());
  PHB_ITEM cb = Signals_return_codeblock( object, "keySequenceChanged(QKeySequence)" );
  if( cb )
  {
    PHB_ITEM psender = Signals_return_qobject ( (QObject *) object, "QKEYSEQUENCEEDIT" );
    PHB_ITEM pkeySequence = Signals_return_object( (void *) &keySequence, "QKEYSEQUENCE" );
    hb_vmEvalBlockV( (PHB_ITEM) cb, 2, psender, pkeySequence );
    hb_itemRelease( psender );
    hb_itemRelease( pkeySequence );
  }
}
#endif

void QKeySequenceEditSlots_connect_signal ( const QString & signal, const QString & slot )
{
  if( s == NULL )
  {
    s = new QKeySequenceEditSlots( QCoreApplication::instance() );
  }

  hb_retl( Signals_connection_disconnection( s, signal, slot ) );
}
